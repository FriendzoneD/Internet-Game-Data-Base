<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Oxb/BUqSXc/a6VtAAAAAAElFTkSuQmCC
</value>
  </data>
</root>